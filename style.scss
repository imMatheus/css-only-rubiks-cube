@use 'sass:math';

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

body {
    background-color: #26f;
    display: grid;
    place-items: center;
    min-height: 100vh;
}

$cube_size: 80px;
.container {
    width: $cube_size * 3;
    height: $cube_size * 3;

    position: relative;
    // perspective: $cube_size * 200;
    transform-style: preserve-3d;
    // transition: all 800ms ease-in-out;
    transform: rotateY(55deg) rotateX(-30deg) rotateZ(0deg);
    &:hover {
        animation: bye infinite 4000ms linear;
    }
}

@keyframes bye {
    0%,
    100% {
        transform: rotateY(30deg) rotateX(-30deg) rotateZ(-90deg);
    }

    40% {
        transform: rotateY(360deg) rotateX(90deg) rotateZ(180deg);
    }

    70% {
        transform: rotateY(90deg) rotateX(360deg) rotateZ(360deg);
    }
}

.cube {
    width: $cube_size;
    height: $cube_size;
    position: absolute;
    transform-style: preserve-3d;
    // transform: rotateY(20deg) rotateX(0deg) rotateZ(0deg) translate(0px, 30px);
    // transition: 800ms all ease-in-out;

    // &:hover {
    //     transform: rotateY(20deg) rotateX(0deg) rotateZ(0deg);
    //     // translate: 200px;
    // }
    // transform-style: preserve-3d;
    // animation: rot infinite 4000ms linear;
}

.face {
    position: absolute;
    width: $cube_size;
    height: $cube_size;
    opacity: 1;
    border: solid black 1px;

    $rotate: 90deg;
    $default_color: #000;
    &--front {
        background: var(--front-color, $default_color);
        transform: rotateY(0deg) translateZ(math.div($cube_size, 2));
    }
    &--back {
        background: var(--back-color, $default_color);
        transform: rotateY($rotate * 2) translateZ(math.div($cube_size, 2));
    }
    &--left {
        background: var(--left-color, $default_color);
        transform: rotateY($rotate * -1) translateZ(math.div($cube_size, 2));
    }
    &--right {
        background: var(--right-color, $default_color);
        transform: rotateY($rotate) translateZ(math.div($cube_size, 2));
    }
    &--top {
        background: var(--top-color, $default_color);
        transform: rotateX($rotate) translateZ(math.div($cube_size, 2));
    }
    &--bottom {
        background: var(--bottom-color, $default_color);
        transform: rotateX($rotate * -1) translateZ(math.div($cube_size, 2));
    }
}

// side colors
$white: #fff;
$blue: #00f;
$green: #0f0;
$red: #f00;
$yellow: #ffff00;
$orange: #ffa500;

.z-front {
    --front-color: #{$red};
}
.z-back {
    --back-color: #{$green};
}
.x-left {
    --left-color: #{$blue};
}
.x-right {
    --right-color: #{$orange};
}
.y-top {
    --top-color: #{$white};
}
.y-bottom {
    --bottom-color: #{$yellow};
}

// positions

.y {
    &-top {
        top: var(--top, 0px);
    }
    &-middle {
        top: var(--top, $cube_size);
    }
    &-bottom {
        bottom: var(--bottom, 0px);
    }
}

.x {
    &-left {
        left: var(--left, 0px);
    }
    &-middle {
        left: var(--left, $cube_size);
    }
    &-right {
        right: var(--right, 0px);
    }
}

.z {
    &-front {
        transform: translate3d(
            var(--translateX, 0px),
            var(--translateY, 0px),
            calc(0p + var(--translateZ, 0px))
        );
    }
    &-middle {
        transform: translate3d(
            var(--translateX, 0px),
            var(--translateY, 0px),
            calc(#{-$cube_size} + var(--translateZ, 0px))
        );
    }
    &-back {
        transform: translate3d(
            var(--translateX, 0px),
            var(--translateY, 0px),
            calc(#{-2 * $cube_size} + var(--translateZ, 0px))
        );
    }
}

$animation-time: 1000ms;

.y-bottom {
    animation: r-bottom $animation-time * 2 forwards;

    &.x-left {
        transform-origin: 120px 0px -80px;
    }
    &.x-middle {
        transform-origin: 40px 0px -80px;
    }
    &.x-right {
        transform-origin: -40px 0px -80px;
    }
}

@keyframes r-bottom {
    0% {
        rotate: y 0deg;
    }
    50% {
        rotate: y 90deg;
    }
    100% {
        rotate: y 180deg;
    }
}

.y-top {
    animation: r-top $animation-time forwards;
    // rotate: y -90deg;
    animation-delay: $animation-time * 2;

    &.x-left {
        transform-origin: 120px 0px -80px;
    }
    &.x-middle {
        transform-origin: 40px 0px -80px;
    }
    &.x-right {
        transform-origin: -40px 0px -80px;
    }
}

@keyframes r-top {
    from {
        rotate: y 0deg;
    }
    to {
        rotate: y -90deg;
    }
}

.x-left {
    animation: r-left $animation-time forwards;
    animation-delay: $animation-time * 3;
    // // rotate: x 90deg;

    // &.y-top {
    //     // transform-origin: 0px 120px -80px;
    // }
    // &.y-middle {
    //     // transform-origin: 0px 40px -80px;
    // }
    // &.y-bottom {
    //     // transform-origin: 0px -40px -80px;
    // }
}

@keyframes r-left {
    // from {
    //     rotate: x 0deg;
    // }
    // to {
    //     rotate: x -90deg;
    // }
}
