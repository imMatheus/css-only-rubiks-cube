@use 'sass:math';

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}

body {
    background-color: #26f;
    display: grid;
    place-items: center;
    min-height: 100vh;
}

$cube_size: 80px;
.container {
    width: $cube_size * 3;
    height: $cube_size * 3;

    position: relative;
    // perspective: $cube_size * 200;
    transform-style: preserve-3d;
    // transition: all 800ms ease-in-out;
    transform: rotateY(35deg) rotateX(30deg) rotateZ(10deg);
    // animation: bye infinite 8000ms ease-in-out forwards;
    &:hover {
    }
}

@keyframes bye {
    0%,
    100% {
        transform: rotateY(-20deg) rotateX(20deg) rotateZ(-40deg);
    }

    50% {
        transform: rotateY(-360deg) rotateX(-360deg) rotateZ(-360deg);
    }
}

.cube {
    width: $cube_size;
    height: $cube_size;
    position: absolute;
    transform-style: preserve-3d;
    // transform: rotateY(20deg) rotateX(0deg) rotateZ(0deg) translate(0px, 30px);
    // transition: 800ms all ease-in-out;

    // &:hover {
    //     transform: rotateY(20deg) rotateX(0deg) rotateZ(0deg);
    //     // translate: 200px;
    // }
    // transform-style: preserve-3d;
    // animation: rot infinite 4000ms linear;
}

.face {
    position: absolute;
    width: $cube_size;
    height: $cube_size;
    opacity: 1;
    border: solid black 1px;

    $rotate: 90deg;
    $default_color: #000000;
    &--front {
        background: var(--front-color, $default_color);
        transform: rotateY(0deg) translateZ(math.div($cube_size, 2));
    }
    &--back {
        background: var(--back-color, $default_color);
        transform: rotateY($rotate * 2) translateZ(math.div($cube_size, 2));
    }
    &--left {
        background: var(--left-color, $default_color);
        transform: rotateY($rotate * -1) translateZ(math.div($cube_size, 2));
    }
    &--right {
        background: var(--right-color, $default_color);
        transform: rotateY($rotate) translateZ(math.div($cube_size, 2));
    }
    &--top {
        background: var(--top-color, $default_color);
        transform: rotateX($rotate) translateZ(math.div($cube_size, 2));
    }
    &--bottom {
        background: var(--bottom-color, $default_color);
        transform: rotateX($rotate * -1) translateZ(math.div($cube_size, 2));
    }
}

// side colors
$white: #fff;
$blue: #00f;
$green: #0f0;
$red: #f00;
$yellow: #ffff00;
$orange: #ffa500;

.z-front {
    --front-color: #{$red};
}
.z-back {
    --back-color: #{$green};
}
.x-left {
    --left-color: #{$blue};
}
.x-right {
    --right-color: #{$orange};
}
.y-top {
    --top-color: #{$white};
}
.y-bottom {
    --bottom-color: #{$yellow};
}

// positions

.y {
    &-top {
        top: var(--top, 0px);
    }
    &-middle {
        top: var(--top, $cube_size);
    }
    &-bottom {
        bottom: var(--bottom, 0px);
    }
}

.x {
    &-left {
        left: var(--left, 0px);
    }
    &-middle {
        left: var(--left, $cube_size);
    }
    &-right {
        right: var(--right, 0px);
    }
}

@mixin z-front-transform($x: 0px, $y: 0px, $z: 0px) {
    transform: translate3d($x, $y, $z);
}

@mixin z-middle-transform($x: 0px, $y: 0px, $z: 0px) {
    transform: translate3d($x, $y, calc(-1 * $cube_size + $z));
}

@mixin z-back-transform($x: 0px, $y: 0px, $z: 0px) {
    transform: translate3d($x, $y, calc((-2 * $cube_size) + $z));
}

.z {
    &-front {
        @include z-front-transform;
    }
    &-middle {
        @include z-middle-transform;
    }
    &-back {
        @include z-back-transform;
    }
}

$animation-time: 4000ms;

.y-bottom {
    &.x-left {
        $transform-origin: 120px 0px -80px;

        transform-origin: $transform-origin;

        @mixin x-left-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;
                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;
                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        0px,
                        0px,
                        (4 * $cube_size) - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yb-xl-zf $animation-time forwards;
            @include x-left-ani(yb-xl-zf);
        }
        &.z-middle {
            animation: yb-xl-zm $animation-time forwards;
            @include x-left-ani(yb-xl-zm, 1);
        }
        &.z-back {
            animation: yb-xl-zb $animation-time forwards;
            @include x-left-ani(yb-xl-zb, 2);
        }
    }
    &.x-middle {
        $transform-origin: 40px 0px -80px;

        transform-origin: $transform-origin;

        @mixin x-middle-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        80px,
                        0px,
                        (3 * $cube_size) - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yb-xm-zf $animation-time forwards;
            @include x-middle-ani(yb-xm-zf);
        }
        &.z-middle {
            animation: yb-xm-zm $animation-time forwards;
            @include x-middle-ani(yb-xm-zm, 1);
        }
        &.z-back {
            animation: yb-xm-zb $animation-time forwards;
            @include x-middle-ani(yb-xm-zb, 2);
        }
    }
    &.x-right {
        $transform-origin: -40px 0px -80px;

        transform-origin: $transform-origin;

        @mixin x-right-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        (2 * $cube_size),
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yb-xr-zf $animation-time forwards;
            @include x-right-ani(yb-xr-zf);
        }
        &.z-middle {
            animation: yb-xr-zm $animation-time forwards;
            @include x-right-ani(yb-xr-zm, 1);
        }
        &.z-back {
            animation: yb-xr-zb $animation-time forwards;
            @include x-right-ani(yb-xr-zb, 2);
        }
    }
}

.y-top {
    animation-delay: $animation-time !important;
    &.x-left {
        $transform-origin: 120px 0px -80px;

        transform-origin: $transform-origin;

        @mixin y-top-x-left-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;
                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;
                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        0px,
                        0px,
                        (4 * $cube-size) - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yt-xl-zf $animation-time forwards;
            @include y-top-x-left-ani(yt-xl-zf);
        }
        &.z-middle {
            animation: yt-xl-zm $animation-time forwards;
            @include y-top-x-left-ani(yt-xl-zm, 1);
        }
        &.z-back {
            animation: yt-xl-zb $animation-time forwards;
            @include y-top-x-left-ani(yt-xl-zb, 2);
        }
    }
    &.x-middle {
        $transform-origin: 40px 0px -80px;

        transform-origin: $transform-origin;

        @mixin y-top-x-middle-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube-size) - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        (2 * $cube_size) - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        $cube-size,
                        0px,
                        (3 * $cube_size) - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yt-xm-zf $animation-time forwards;
            @include y-top-x-middle-ani(yt-xm-zf);
        }
        &.z-middle {
            animation: yt-xm-zm $animation-time forwards;
            @include y-top-x-middle-ani(yt-xm-zm, 1);
        }
        &.z-back {
            animation: yt-xm-zb $animation-time forwards;
            @include y-top-x-middle-ani(yt-xm-zb, 2);
        }
    }
    &.x-right {
        $transform-origin: -40px 0px -80px;

        transform-origin: $transform-origin;

        @mixin y-top-x-right-ani($name, $count: 0) {
            @keyframes #{$name} {
                0% {
                    rotate: y 0deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        160px - ($cube_size * $count)
                    );
                }

                99% {
                    rotate: y 90deg;
                    transform-origin: $transform-origin;

                    @include z-back-transform(
                        0px,
                        0px,
                        160px - ($cube_size * $count)
                    );
                }

                100% {
                    transform-origin: initial;
                    rotate: y 90deg;
                    @include z-back-transform(
                        160px,
                        0px,
                        160px - ($cube_size * $count)
                    );
                }
            }
        }

        &.z-front {
            animation: yt-xr-zf $animation-time forwards;
            @include y-top-x-right-ani(yt-xr-zf);
        }
        &.z-middle {
            animation: yt-xr-zm $animation-time forwards;
            @include y-top-x-right-ani(yt-xr-zm, 1);
        }
        &.z-back {
            animation: yt-xr-zb $animation-time forwards;
            @include y-top-x-right-ani(yt-xr-zb, 2);
        }
    }
}
